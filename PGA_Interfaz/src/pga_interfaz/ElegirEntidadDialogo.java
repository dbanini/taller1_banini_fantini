
package pga_interfaz;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

import pga_modelo.Alumno;

/**
 *
 * @author Dario
 */
public class ElegirEntidadDialogo extends javax.swing.JDialog {

    /** Creates new form ElegirEntidadDialogo */
    public ElegirEntidadDialogo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        entidadesFiltro = new javax.swing.JTextField();
        scrollEntidades = new javax.swing.JScrollPane();
        entidadesTabla = new javax.swing.JTable();
        botonesPanel = new javax.swing.JPanel();
        cancelarBoton = new javax.swing.JButton();
        seleccionarBoton = new javax.swing.JButton();
        entidadPanel = new javax.swing.JScrollPane();
        entidadDescripcion = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        entidadesFiltro.setToolTipText("Filtrar el listado");
        entidadesFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entidadesFiltroActionPerformed(evt);
            }
        });

        entidadesTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificador", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        entidadesTabla.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        entidadesTabla.getTableHeader().setReorderingAllowed(false);
        scrollEntidades.setViewportView(entidadesTabla);
        if (entidadesTabla.getColumnModel().getColumnCount() > 0) {
            entidadesTabla.getColumnModel().getColumn(0).setMinWidth(100);
            entidadesTabla.getColumnModel().getColumn(0).setMaxWidth(100);
            entidadesTabla.getColumnModel().getColumn(0).setHeaderValue("Identificador");
            entidadesTabla.getColumnModel().getColumn(1).setHeaderValue("Nombre");
        }

        cancelarBoton.setText("Cancelar");
        cancelarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarBotonActionPerformed(evt);
            }
        });

        seleccionarBoton.setText("Seleccionar");
        seleccionarBoton.setEnabled(false);
        seleccionarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout botonesPanelLayout = new javax.swing.GroupLayout(botonesPanel);
        botonesPanel.setLayout(botonesPanelLayout);
        botonesPanelLayout.setHorizontalGroup(
            botonesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botonesPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(seleccionarBoton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelarBoton)
                .addContainerGap())
        );
        botonesPanelLayout.setVerticalGroup(
            botonesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botonesPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(botonesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarBoton)
                    .addComponent(seleccionarBoton))
                .addContainerGap())
        );

        entidadDescripcion.setColumns(20);
        entidadDescripcion.setRows(5);
        entidadDescripcion.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        entidadDescripcion.setEnabled(false);
        entidadPanel.setViewportView(entidadDescripcion);

        jLabel1.setText(" Buscar:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(entidadesFiltro))
                            .addComponent(scrollEntidades, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(entidadPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(entidadesFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(entidadPanel)
                    .addComponent(scrollEntidades, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }//GEN-END:initComponents

    private ArrayList<String> claves;
    private ArrayList<String> descripciones;
    private String entidadElegida = null;

    private void cancelarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarBotonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_cancelarBotonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // Crear ordenador para la tabla.
        TableRowSorter sorter = new TableRowSorter(entidadesTabla.getModel());
        entidadesTabla.setRowSorter(sorter);
        
        // Crear listener para el filtro, el cual usa el sorter creado.
        entidadesFiltro.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                actualizarFiltro();
            }
            public void removeUpdate(DocumentEvent e) {
                actualizarFiltro();
            }
            public void insertUpdate(DocumentEvent e) {
                actualizarFiltro();
            }
    
            public void actualizarFiltro() {
                String filtro = entidadesFiltro.getText();
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + filtro));
            }
        });
        
        entidadesTabla.getRowSorter().toggleSortOrder(0);
        
        // Crear listener para la tabla.
        entidadesTabla.getSelectionModel().addListSelectionListener(new ListSelectionListener()
          {
            @Override
            public void valueChanged(ListSelectionEvent e) 
            {
                ListSelectionModel lsm = (ListSelectionModel) e.getSource();
                int selectedRow = lsm.getMinSelectionIndex();
                boolean seleccionado = selectedRow >= 0;
                seleccionarBoton.setEnabled(seleccionado);
                if (seleccionado) {
                    selectedRow = entidadesTabla.convertRowIndexToModel(selectedRow);
                    entidadDescripcion.setText(descripciones.get(selectedRow));
                }
                else {
                    entidadDescripcion.setText("");
                }
            }
        });
        
        this.setTitle("Seleccione una entidad");
    }//GEN-LAST:event_formWindowOpened

    private void seleccionarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarBotonActionPerformed
        ListSelectionModel lsm = (ListSelectionModel) entidadesTabla.getSelectionModel();
        int selectedRow = lsm.getMinSelectionIndex();
        if (selectedRow >= 0) {
            selectedRow = entidadesTabla.convertRowIndexToModel(selectedRow);
            entidadElegida = claves.get(selectedRow);
            this.setVisible(false);
        }
    }//GEN-LAST:event_seleccionarBotonActionPerformed

    private void entidadesFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entidadesFiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_entidadesFiltroActionPerformed

    public void setupTabla(String claveNombre, ArrayList<String> claves, ArrayList<String> nombres, ArrayList<String> descripciones) {
        assert claves.size() == nombres.size() : "El arreglo de claves no tiene la misma cantidad que el de nombres.";
        this.claves = claves;
        this.descripciones = descripciones;

        DefaultTableModel modelo = (DefaultTableModel) entidadesTabla.getModel();
        for (int i = 0; i < claves.size(); i++) {
            modelo.addRow(new Object[] {claves.get(i), nombres.get(i)});
        }
    }
    
    public String getEntidadElegida() {
        return entidadElegida;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing
                                                                   .UIManager
                                                                   .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing
                         .UIManager
                         .setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ElegirEntidadDialogo.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ElegirEntidadDialogo.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ElegirEntidadDialogo.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ElegirEntidadDialogo.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt
            .EventQueue
            .invokeLater(new Runnable() {
                public void run() {
                    ElegirEntidadDialogo dialog = new ElegirEntidadDialogo(new javax.swing.JFrame(), true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                }
            });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel botonesPanel;
    private javax.swing.JButton cancelarBoton;
    private javax.swing.JTextArea entidadDescripcion;
    private javax.swing.JScrollPane entidadPanel;
    private javax.swing.JTextField entidadesFiltro;
    private javax.swing.JTable entidadesTabla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane scrollEntidades;
    private javax.swing.JButton seleccionarBoton;
    // End of variables declaration//GEN-END:variables

}
